'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _metalAssertions = require('metal-assertions');

var _metal = require('metal');

var isMultiple = function isMultiple(module) {
  return (0, _metal.isObject)(module.route) && module.route.multiple;
};

var isPureFunction = function isPureFunction(value) {
  if ((0, _metal.isFunction)(value)) {
    // Infer as simple function when the function's "__proto__" is not modified.
    var maybeSimpleFunction = value.__proto__ === Function.__proto__;
    // Infer as async function if function definition starts with "async ".
    var maybeAsyncFunction = value.toString().indexOf('async ') === 0;
    return maybeSimpleFunction || maybeAsyncFunction;
  }
  return false;
};

exports.default = {
  test: function test(module, filename, magnet) {
    return !isMultiple(module) && (0, _metal.isObject)(module.route) && isPureFunction(module.default);
  },
  register: function register(module, filename, magnet) {
    var path = module.route.path;
    var method = module.route.method || 'get';
    var type = module.route.type || 'html';
    var fileshort = filename.substring(magnet.getServerDistDirectory().length);

    (0, _metalAssertions.assertString)(method, 'Route configuration method must be a string, ' + ('check ' + fileshort + '.'));

    (0, _metalAssertions.assertDefAndNotNull)(path, 'Route configuration path must be specified, ' + ('check ' + fileshort + '.'));

    var app = magnet.getServer().getEngine();

    app[method.toLowerCase()](path, async function (req, res, next) {
      try {
        var result = await module.default.call(module.default, req, res, next);
        if (!res.headersSent) {
          res.type(type).send(result);
        }
      } catch (error) {
        next(error);
      }
    });
  }
};