'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getRoutesTable = getRoutesTable;

var _magnet = require('./magnet');

var _magnet2 = _interopRequireDefault(_magnet);

var _magnetPluginController = require('magnet-plugin-controller');

var _magnetPluginController2 = _interopRequireDefault(_magnetPluginController);

var _cliTable = require('cli-table');

var _cliTable2 = _interopRequireDefault(_cliTable);

var _path2 = require('path');

var _path3 = _interopRequireDefault(_path2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Scans build files collecting routes metadata into an array consumed
 * by `magnet routes` command output table.
 * @param {Magnet} magnet
 * @return {Array.<Array.<string>>}
 * @private
 */
function getRoutesDefinition_(magnet) {
  var dist = magnet.getServerDistDirectory();
  var files = magnet.getFiles({ directory: dist, realpath: true });

  var results = [];
  files.forEach(function (file) {
    switch (file) {
      case _path3.default.join(dist, _magnet2.default.LifecyleFiles.START):
      case _path3.default.join(dist, _magnet2.default.LifecyleFiles.STOP):
        return;
    }

    var module = require(file);
    var short = file.substring(dist.length);

    if (_magnetPluginController2.default.test(module, file, magnet)) {
      results.push(['―', '―', '―', short]);
    } else {
      var route = module.route;
      if (route) {
        var _path = route.path;
        var method = route.method || 'get';
        var type = route.type || 'html';
        results.push([method.toUpperCase(), _path, type, short]);
      }
    }
  });
  return results;
}

/**
 * Builds routing table based on route definitions. If no routes were found
 * returns empty string, otherwise return as example below:
 * ┌────────┬──────┬──────┬───────────┐
 * │ method │ path │ type │ file      │
 * ├────────┼──────┼──────┼───────────┤
 * │ POST   │ /api │ json │ /api.js   │
 * │ GET    │ /    │ html │ /index.js │
 * └────────┴──────┴──────┴───────────┘
 * @param {Magnet} magnet
 * @return {String}
 */
function getRoutesTable(magnet) {
  var table = new _cliTable2.default({
    head: ['method', 'path', 'type', 'file'],
    style: {
      border: ['gray'],
      compact: true,
      head: ['gray']
    }
  });
  table.push.apply(table, _toConsumableArray(getRoutesDefinition_(magnet)));
  if (table.length) {
    return table.toString();
  }
  return '';
}